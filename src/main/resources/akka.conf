
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

  actor {
    serializers {
      // kryo = "com.twitter.chill.akka.AkkaSerializer"
      java = "akka.serialization.JavaSerializer"
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }
    serialize-messages = on
    kryo  {
      type = "graph"
      idstrategy = "incremental"
      buffer-size = 4096
      max-buffer-size = -1
      use-manifests = false
      use-unsafe = false
      post-serialization-transformations = "lz4,aes"
      implicit-registration-logging = true
      kryo-trace = true
      resolve-subclasses = true
    }
    serialization-bindings {
      "io.soheila.cms.entities.Story" = kryo
      "io.soheila.cms.entities.Media" = kryo
      "io.soheila.cms.entities.Content" = kryo
      "io.soheila.cms.entities.Comment" = kryo
      "io.soheila.cms.entities.StoryReference" = kryo
      "io.soheila.cms.entities.StoryVerification" = kryo
      "io.soheila.cms.entities.UserReference" = kryo
      "io.soheila.cms.vos.StoryUpdateVO" = kryo
      "io.soheila.cms.vos.StoryCreateVO" = kryo
      "io.soheila.cms.services.stories.fsm.StoryDomainEvt" = kryo
      "io.soheila.cms.services.stories.fsm.Initialize" = kryo
      "io.soheila.cms.services.stories.fsm.GetCurrentData" = kryo
      "io.soheila.cms.services.stories.fsm.GetState" = kryo
      "io.soheila.cms.services.stories.fsm.Archive" = kryo
      "io.soheila.cms.services.stories.fsm.Edit" = kryo
      "io.soheila.cms.services.stories.fsm.Delete" = kryo
      "io.soheila.cms.services.stories.fsm.EditMedia" = kryo
    }
  }
}
